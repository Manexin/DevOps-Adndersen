#установка postgresql
sudo apt update
sudo apt install postgresql postgresql-contrib
sudo -u postgres psql -c "SELECT version();"
sudo su - postgres
psql
\q
sudo -u postgres psql
#создаем нового пользователя из командной строки
sudo su - postgres -c "createuser replication"
#создаем новую БД из командной строки
sudo su - postgres -c "createdb newdb"
#подключаемся к серверу БД
sudo -u postgres psql
#наделяе пользователя правами
grant all privileges on database newdb to replication;
#добавляем IP который будет слушать сервер БД '*'==любой адресс
sudo nano /etc/postgresql/11/main/postgresql.conf	
---listen_addresses = '*'
#перезапускае службу
sudo service postgresql restart
#проверяем применился ли конфиг
ss -nlt | grep 5432	#check change
#добавляем в pg_hba.conf пользователя которому разрешено входящее подключение
# вместо trust можно указывать пароль или md5
host    replication     replicator      192.168.0.97/25         trust
#создаем нового пользователя из командной строки c паролем и ограничением подключений
CREATE USER replicator REPLICATION LOGIN CONNECTION LIMIT 1000 ENCRYPTED PASSWORD 'Andersen';

#список пользователей команда запускается из БД
select * from pg_shadow;

#список баз данных команда запускается из БД
select * from pg_database;

#из командной строки
psql -A -q -t -c "select datname from pg_database" template1

#очистить таблицу
TRUNCATE lab_db;

#проверка и перезапуск кластера
pg_lsclusters
Ver Cluster Port Status Owner    Data directory              Log file
11  main    5432 down   postgres /var/lib/postgresql/11/main /var/log/postgresquerylog//postgresql.csv,/var/log/postgresquerylog//postgresql.log

sudo pg_ctlcluster 11 main start
#-----------------------------
sudo nano /etc/postgresql/11/main/postgresql.conf

data_directory = '/var/lib/postgresql/11/main'
$PGDATA=/var/lib/postgresql
#-------------------------------------
#настройка логов транзакций и архивирование
sudo su postgres
wal_level = logical 
wal_log_hints = on 
archive_mode = on
archive_command = 'cp -i %p /var/lib/postgresql/archive/%f'
max_wal_senders = 15
hot_standby = on
synchronous_commit = remote_write
mkdir -p /var/lib/postgresql/archive

#настройка логов для pgbadger
log_duration = on                # Включает логирование запросов
log_min_duration_statement = 1   # Устанавливает минимальное время (в миллисекундах) выполнения запроса, который попадает в лог
log_checkpoints = on             # В лог будет попадат информация о checkpoint'ах
log_connections = on             # В лог будет попадать информация о новых подключениях к PostgreSQL
log_disconnections = on          # В лог будет попадать информация об отключениях от PostgreSQL
log_lock_waits = on              # В лог будет попадать информация о длительных ожиданиях сессий в попытке получить блокировку на объекте
log_temp_files = 0               # В лог будет попадать информация о временных файлах
#"Натравить" pgBadger на лог PostgreSQL'а
pgbadger -a 1 /var/log/postgresql/postgresql-11-main.log
#Параметры -а 1 означают, что количественную статистику утилита будет отображать с детализацией в 1 минуту



select usename,application_name,client_addr,backend_start,state,sync_state from pg_stat_replication;

#создаем таблицу 
CREATE TABLE lab_db (c1 integer, c2 text);
#заполняем ее данными и анализирем время выполнения
EXPLAIN analyze INSERT INTO lab_db SELECT i, md5(random()::text) FROM generate_series(1, 1000000)AS i;
SELECT * FROM lab_db limit 10;


#установка dhis
sudo useradd -d /home/dhis -m dhis -s /bin/false создаем нового пользователя
sudo passwd dhis			#добавляем ему пароль
mkdir /home/dhis/config			#создаем папку конфигураций dhis
chown dhis:dhis /home/dhis/config	#устанавливаем владельца dhis
sudo -u postgres createuser -SDRP dhis	#создаем пользователя dhis в postgres без привелегий
sudo -u postgres createdb -O dhis dhis2	#создаем базу данных
sudo -u postgres psql -c "create extension postgis;" dhis2	#добавлем пользователю БД DHIS 2 разрешение на создание расширений, используя пользователя postgres 
